install.packages("sp")
gadm36_TUR_2_sp <- readRDS("D:/Alihan/Downloads/gadm36_TUR_2_sp.rds")
install.packages("tidyverse")
writeLines('PATH="${RTOOLS40_HOME}\\usr\\bin;${PATH}"', con = "~/.Renviron")
install.packages("GADMTools")
library(GDAMTools)
FRA <-gadm_sf_loadCountries("TUR",level =2,basefile ="./")
library(GADMTools)
TUR <-gadm_sf_loadCountries("TUR",level =2,basefile ="./")
View(TUR)
View(gadm36_TUR_2_sp)
TUR <-gadm_sf_loadCountries("TUR",level =3,basefile ="./")
TUR <-gadm_sf_loadCountries("TUR",level =2,basefile ="./")
IST <- gadm_subset(TUR, level=1, regions = "Istanbul")
plot(IST)
gadm_plot(IST)
library(dplyr)
gadm_plot(IST %>% gadm_showNorth("tl") %>% gadm_showScale(’bl’)
gadm_plot(IST %>% gadm_showNorth("tl") %>% gadm_showScale(’bl’)
gadm_plot(IST) %>% gadm_showNorth("tl") %>% gadm_showScale(’bl’)
gadm_plot(IST) %>% gadm_showNorth("tl") %>% gadm_showScale("bl")
TUR <-gadm_sp_loadCountries("TUR",level =2,basefile ="./")
IST <- gadm_subset(TUR, level=1, regions = "Istanbul")
plot(TUR)
plot(TUR$spdf)
plot(IST$spdf)
IST_SPDF <- IST$spdf
saveRDS(object = IST_SPDF, file = "IST.rds")
library(readr)
US_Accidents_June20 <- read_csv("D:/Dataset/US_Accidents_June20.csv")
View(US_Accidents_June20)
library(tidyverse)
US_Accidents_June20$Start_Time <- lubridate::as_datetime(US_Accidents_June20$Start_Time)
View(US_Accidents_June20)
accidentsmay2019 <- US_Accidents_June20 %>% filter(Start_Time > "2019-04-30 00:00:00")
accidentsmay2019 <- US_Accidents_June20 %>% filter(Start_Time > "2019-04-30 00:00:00", Start_Time < "2019-05-01 00:00:00")
View(accidentsmay2019)
accidentsmay2019 <- US_Accidents_June20 %>% filter(Start_Time > "2019-04-30 00:00:00", Start_Time < "2019-05-30 23:59:59")
View(accidentsmay2019)
accidentsmay2019 <- US_Accidents_June20 %>% filter(Start_Time > "2019-05-01 00:00:00", Start_Time < "2019-05-30 23:59:59")
View(accidentsmay2019)
View(accidentsmay2019)
accidentsmay2019 <- US_Accidents_June20 %>% filter(Start_Time > "2019-05-01 00:00:00") %>% filter(Start_Time < "2019-05-30 23:59:59")
View(accidentsmay2019)
write.csv2(accidentsmay2019, "accidentmay20.csv")
shiny::runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
library(shiny)
library(leaflet)
library(RColorBrewer)
library(stringr)
library(dplyr)
library(ggplot2)
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
isparkparkbilgileri$Latitude <- as.numeric(isparkparkbilgileri$Latitude)
isparkparkbilgileri$Longitude <- as.numeric(isparkparkbilgileri$Longitude)
View(isparkparkbilgileri)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
shiny::runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi))
isparkparkbilgileri <- isparkparkbilgileri %>% right_join(.,ortalamadoluluk, by = "ParkID")
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
library(shiny)
library(leaflet)
library(RColorBrewer)
library(stringr)
library(dplyr)
library(ggplot2)
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
isparkparkbilgileri$Latitude <- as.numeric(isparkparkbilgileri$Latitude)
isparkparkbilgileri$Longitude <- as.numeric(isparkparkbilgileri$Longitude)
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi))
isparkparkbilgileri <- isparkparkbilgileri %>% right_join(.,ortalamadoluluk, by = "ParkID")
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
View(isparkparkbilgileri)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
shiny::runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
df1 <- isparkparkbilgileri  %>% filter(Kapasitesi >= input$total[1], Kapasitesi <= input$total[2])
df1 <- isparkparkbilgileri  %>% filter(Kapasitesi >= input$total[1], Kapasitesi <= input$total[2])
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
isparkparkbilgileri$Latitude <- as.numeric(isparkparkbilgileri$Latitude)
isparkparkbilgileri$Longitude <- as.numeric(isparkparkbilgileri$Longitude)
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi))
isparkparkbilgileri <- isparkparkbilgileri %>% right_join(.,ortalamadoluluk, by = "ParkID")
View(isparkparkbilgileri)
View(ortalamadoluluk)
ortalamadoluluk
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi)) %>% ungroup()
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi)) %>% ungroup()
isparkparkbilgileri <- isparkparkbilgileri %>% right_join(.,ortalamadoluluk, by = "ParkID")
View(isparkparkbilgileri)
library(dplyr)
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
isparkparkbilgileri$Latitude <- as.numeric(isparkparkbilgileri$Latitude)
isparkparkbilgileri$Longitude <- as.numeric(isparkparkbilgileri$Longitude)
ortalamadoluluk <- parkcapacitylog %>% group_by(ParkID) %>% summarise(OrtalamaDoluluk = mean(DolulukYuzdesi)) %>% ungroup()
isparkparkbilgileri <- isparkparkbilgileri %>% right_join(.,ortalamadoluluk, by = "ParkID")
View(isparkparkbilgileri)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
df <- parkcapacitylog %>% filter(ParkID == 1)
View(df)
View(df)
ortdol <- function(ParkID){
df <- parkcapacitylog %>% filter(ParkID == ParkID)
mean(df$DolulukYuzdesi)
}
ortdol(1)
isparkparkbilgileri <- isparkparkbilgileri %>% mutate(OrtalamaDoluluk=ortdol(ParkID))
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp()
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
View(isparkparkbilgileri)
View(df)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
ortdol <- function(ParkID){
df <- parkcapacitylog %>% filter(ParkID == ParkID)
mean(df$DolulukYuzdesi)
}
View(isparkparkbilgileri)
ortdol(1189)
ortdol <- function(ID){
df <- parkcapacitylog %>% filter(ParkID == ID)
mean(df$DolulukYuzdesi)
}
ortdol(1189)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
selectedpark <- isparkparkbilgileri[isparkparkbilgileri$ParkID == 1038,]
selectedpark <- isparkparkbilgileri[isparkparkbilgileri$ParkID == 1,]
View(selectedpark)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp()
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
View(parkcapacitylog)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp()
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
df1 <- isparkparkbilgileri  %>% filter(Kapasitesi >= 0, Kapasitesi <= 5000)
leaflet(df1) %>% addTiles() %>%
fitBounds(~min(df1$Longitude), ~min(df1$Latitude), ~max(df1$Longitude), ~max(df1$Latitude))
df1 <- datafilt()
leafletProxy("map", data = df1) %>%
clearShapes() %>%
addCircles(radius = ~df1$Kapasitesi, layerId= ~df1$ParkID, weight = 1, color = "#777777",
fillColor = ~pal(df1$OrtalamaDoluluk), fillOpacity = 0.5, stroke = FALSE
)
leafletProxy("map", data = df1) %>%
clearShapes() %>%
addCircles(radius = ~df1$Kapasitesi, layerId= ~df1$ParkID, weight = 1, color = "#777777",
fillColor = ~pal(df1$OrtalamaDoluluk), fillOpacity = 0.5, stroke = FALSE
)
addCircles(radius = ~df1$Kapasitesi, layerId= ~df1$ParkID, weight = 1, color = "#777777",
fillColor = ~pal(df1$OrtalamaDoluluk), fillOpacity = 0.5, stroke = FALSE
)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
selectedpark <- df1 %>% filter(ParkID == 1)
df1 <- isparkparkbilgileri
selectedpark <- df1 %>% filter(ParkID == 1)
content <- as.character(tagList(
tags$h4("Park Area Name:", selectedpark$ParkAdi),
sprintf("District: %s", selectedpark$Ilce), tags$br(),
sprintf("Park Area Type: %s", selectedpark$ParkTipi), tags$br(),
sprintf("Capacity: %s", as.integer(selectedpark$Kapasitesi)), tags$br(),
sprintf("Average Occupancy Rate: %s", selectedpark$OrtalamaDoluluk)
))
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
shiny::runApp(display.mode="showcase")
shiny::runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny',display.mode="showcase")
shiny::runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny', shiny.reactlog=TRUE)
options(shiny.reactlog=TRUE)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
options(shiny.fullstacktrace = TRUE)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
options(shiny.error = browser)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
load("~/GitHub/mef04g-bak-r-iz/ISPARK Shiny/ISPARK.RData")
isparkparkbilgileri$Latitude <- as.numeric(isparkparkbilgileri$Latitude)
isparkparkbilgileri$Longitude <- as.numeric(isparkparkbilgileri$Longitude)
ortdol <- function(ID){
df <- parkcapacitylog %>% filter(ParkID == ID)
mean(df$DolulukYuzdesi)
}
for (i in 1:nrow(isparkparkbilgileri)) {
content <- paste(sep = "<br/>",
isparkparkbilgileri$ParkAdi[i],
paste0("District: ",isparkparkbilgileri$Ilce)
)
isparkparkbilgileri$popup[i] <- content
}
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
View(parkcapacitylog)
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
runApp('GitHub/mef04g-bak-r-iz/ISPARK Shiny')
setwd("~/GitHub/mef04g-bak-r-iz")
runApp('ISPARK Shiny')
runApp('ISPARK Shiny')
